// <auto-generated />
using System;
using Medicine.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medicine.API.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230808155954_first1")]
    partial class first1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Medicine.Models.Cabinet", b =>
                {
                    b.Property<int>("Cab_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cab_ID"));

                    b.Property<string>("Cab_Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Cab_ID");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("Medicine.Models.District", b =>
                {
                    b.Property<int>("Dis_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dis_ID"));

                    b.Property<string>("Dis_Number")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Dis_ID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Medicine.Models.Doctors", b =>
                {
                    b.Property<int>("Doc_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Doc_ID"));

                    b.Property<int>("Doc_Cab_ID")
                        .HasColumnType("int");

                    b.Property<int>("Doc_Dis_ID")
                        .HasColumnType("int");

                    b.Property<int>("Doc_Spec_ID")
                        .HasColumnType("int");

                    b.Property<string>("Doc_fullname")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IfDistrict_doctor")
                        .HasColumnType("bit");

                    b.HasKey("Doc_ID");

                    b.HasIndex("Doc_Cab_ID");

                    b.HasIndex("Doc_Dis_ID");

                    b.HasIndex("Doc_Spec_ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Medicine.Models.Patients", b =>
                {
                    b.Property<int>("Pat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pat_ID"));

                    b.Property<string>("Pat_Address")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("Pat_Bday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Pat_Denger")
                        .HasColumnType("int");

                    b.Property<int>("Pat_Dis_ID")
                        .HasColumnType("int");

                    b.Property<string>("Pat_Middlename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pat_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pat_Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Pat_ID");

                    b.HasIndex("Pat_Dis_ID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Medicine.Models.Specialization", b =>
                {
                    b.Property<int>("Spec_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Spec_ID"));

                    b.Property<string>("Spec_Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Spec_ID");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("Medicine.Models.Doctors", b =>
                {
                    b.HasOne("Medicine.Models.Cabinet", "Cabinet_data")
                        .WithMany()
                        .HasForeignKey("Doc_Cab_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medicine.Models.District", "District_data")
                        .WithMany()
                        .HasForeignKey("Doc_Dis_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medicine.Models.Specialization", "Spec_data")
                        .WithMany()
                        .HasForeignKey("Doc_Spec_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet_data");

                    b.Navigation("District_data");

                    b.Navigation("Spec_data");
                });

            modelBuilder.Entity("Medicine.Models.Patients", b =>
                {
                    b.HasOne("Medicine.Models.District", "District_data")
                        .WithMany()
                        .HasForeignKey("Pat_Dis_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District_data");
                });
#pragma warning restore 612, 618
        }
    }
}
